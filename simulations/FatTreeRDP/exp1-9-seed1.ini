[General]
network = FatTreeNdp
result-dir = exp1-1-seed1
record-eventlog=false
#FatTreeNdp.Pod[3].racks[1].servers[0].app[2].module-eventlog-recording = true
**.module-eventlog-recording = false
debug-on-errors = false
cmdenv-express-mode = false
cmdenv-log-prefix = %t | %m |
cmdenv-event-banners = false
#FatTreeNdp.Pod[2].racks[1].servers[1].ndp.cmdenv-log-level = trace
#FatTreeNdp.Pod[3].racks[1].servers[0].ndp.conn-136.cmdenv-log-level = info
#FatTreeNdp.Pod[3].racks[1].servers[0].app[2].cmdenv-log-level = info

#FatTreeNdp.Pod[2].racks[1].servers[1].ndp.conn-137.cmdenv-log-level = info
#FatTreeNdp.Pod[2].racks[1].servers[1].app[0].cmdenv-log-level = info

FatTreeNdp.Pod[2].racks[0].servers[1].ndp.conn-2231.cmdenv-log-level = info
FatTreeNdp.Pod[2].racks[0].servers[1].app[1].cmdenv-log-level = info
**.cmdenv-log-level = off
cmdenv-redirect-output = false
cmdenv-output-file = senderLog.txt
#cmdenv-express-mode = true
cmdenv-performance-display = true
#*.visualizer.displayRoutingTables = true
**.statistic-recording=true
**.app[*].packetReceived:vector(packetBytes).vector-recording = true
**.app[*].packetReceived:sum(packetBytes).scalar-recording = true
**.app[*].packetReceived:count.scalar-recording = true
**.app[*].mohThroughputNDP:last.scalar-recording = true 
**.app[*].instThroughputNDP:mean.scalar-recording = true
**.app[*].instThroughputNDP:vector.vector-recording = true


**.app[*].multicastGroupIdSignal:last.scalar-recording = false
**.app[*].multisourceGroupIdSignal:last.scalar-recording = false



**.app[*].fctRecordv3:last.scalar-recording = true
**.app[*].numRcvTrimmedHeaderSigNdp:last.scalar-recording = true
**.CoreRouter[*].**.numTrimmedPkt:last.scalar-recording = true
##**.CoreRouter[*].**.dropPk:count.scalar-recording = true
**.CoreRouter[*].**.packetPushed:count.scalar-recording = true
**.aggRouters[*].**.numTrimmedPkt:last.scalar-recording = true
##**.aggRouters[*].**.dropPk:count.scalar-recording = true
**.aggRouters[*].**.packetPushed:count.scalar-recording = true
**.edgeSwitch.**.numTrimmedPkt:last.scalar-recording = true
##**.edgeSwitch.**.dropPk:count.scalar-recording = true
**.edgeSwitch.**.packetPushed:count.scalar-recording = true
##**.servers[*].**.dropPk:count.scalar-recording = true
**.servers[*].**.packetReceived:count.scalar-recording = true
**.servers[*].**.packetReceived:sum(packetBytes).scalar-recording = true
##**.servers[*].**.dropPk:sum(packetBytes).scalar-recording = true
FatTreeNdp.centralSchedulerNdp.*.scalar-recording = true
FatTreeNdp.centralSchedulerNdp.*.vector-recording = true
# The ptatern matcher in INI file always applies the first pattern matching in the file starting from the top. 
# This means that the order of patterns are important.  First enable the recording on all vectors you need and then disable the rest with 
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false
# k = 4 (16 servers),  k = 6 (54 servers),  k = 8 (128 servers),  k = 10 (250 servers),  
# k = 12 (432 servers),  k = 14 (686 servers),  k = 16 (1024 servers)
**.k = ${FatTreeSize=4..40 step 2}
**.kValue = ${FatTreeSize}
**.trafficMatrixType = ${"randTM"}#${"permTM"}  #randTM permTM
**.arrivalRate = 2000 ##2500
**.shuffle = true
**.flowSize = 2000 #49 and 200  #100 # symbols (each symbol 1500B)
**.numShortFlows = ${numShortFlows=0..999 step 1, 1000..9999 step 100, 10000, 12000, 20000,50000,100000}
##**.numShortFlows = ${numShortFlows=2000}
**.longFlowSize = 10000#100000  #1 # 2000MiB  not used
**.percentLongFlowNodes = 0.8
**.initialWindow = 15
**.IW = 15 #8 same value as the one in the above line,
# it is used by the central Node to do scalarRecord in config.csv as we just enable scalar records in this module not for Ndp module. 

**.ndpSwitchQueueLength = 8  # FYIIII you need to change the value below as well
# same value as queue.frameCapacity below. This is  used only to store this value in the config.csv (as IW)

**.isWebSearchWorkLoad = false 
**.perPacketEcmp = true
**.perFlowEcmp = false
**.seedValue = 1111#2222
#Incast parameters
**.numIncastSenders = 0#70#${1..70 step 3} 

#multicasting parameters  & multiSourcing parameters
**.oneToOne = true 
**.oneToMany = false 
**.manyToOne = false 
**.daisyChainGFS = false  #check SCDP paper for details (or thesis)
**.numReplica = 0#1 #5 usually 3
**.numRunningMulticastGroups = 0#1#22 #1check SCDP paper for details
**.numRunningMultiSourcingGroups = 0#1667 #300

**.servers*.ppp[*].ppp.queue.typename = "PacketQueue"
**.servers*.ppp[*].ppp.queue.packetCapacity = -1
# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )

**.ppp[*].ppp.queue.typename = "NdpSwitchQueue" # in routers DropTailQueue NDPQueue
**.ppp[*].ppp.queue.packetCapacity = ${8..8 step 1} #${30..30 step 1}  # in routers



**.ndp.typename = "Ndp"
**.ndp.ndpAlgorithmClass = "DumbNdp"
**.server*.numApps =1
#**.app[0].typename = "NdpBasicClientApp"
**.server*.app[0].typename = "NdpBasicClientApp"
**.server*.app[0].connectAddress = "FatTreeNdp.Pod[*].racks[*].servers[*]"  #make sure intial values are correct
**.server*.app[0].connectPort = 80
**.server*.app[0].startTime =50s
**.server*.app[0].numPacketsToSend = 50
**.channel.throughput.result-recording-modes=all
